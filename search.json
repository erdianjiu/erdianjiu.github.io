[{"title":"常用数据结构","url":"/erdianjiu.github.io/2018/09/24/常用数据结构/","content":"**loading...**\n","tags":["python"]},{"title":"基础查找、排序算法","url":"/erdianjiu.github.io/2018/09/24/基础查找、排序算法/","content":"#算法的性能分析\n* 算法的性能分析包括两方面：时间复杂度和空间复杂度。\n\n时间复杂度：用big O符号表示。n+1、100n+99属于同增长量级都记为O(n)\n#基础查找算法\n* 顺序查找：按着顺序从头找到尾。时间复杂度为O(n)。\n\n例:在列表中查找特定数值x：\n\n```python\ndef search(alist, item): #顺序查找法\n    pos = 0              #初始查找位置\n    found = False        #未找到\n    while pos < len(alist) and not found: #列表未结束并且未找到则一直循环\n        if alist[pos] == item: #找到对象，返回True\n            found = True\n        else:\n            pos += 1\n    return found\ndef main(): #测试数据\n    test = [1, 3, 33, 8, 37, 29, 25, 99, 100]\n    print(search(test, 3))\n    print(search(test,98))\nif __name__ == \"__main__\": main()\n```\n\n* 二分查找法：每次从中间项开始查找，若没找到，则判断查找对象大于中间项还是小于中间项，然后继续上个步骤。用于已排好序，或者排序无影响的列表查找。时间复杂度为O(log2N)。\n\n例：在列表中查找特定数值x：\n\n```python\n#非递归实现\ndef search(alist, item): #二分查找法\n    low = 0              #左边界  \n    high = len(alist) - 1    #右边界\n    while low <= high:   #左边界小于右边界，则循环\n        mid = (low + high) // 2  #计算中间位置\n        if alist[mid] < item:\n            low = mid + 1\n        elif alist[mid] > item:\n            high = mid - 1\n        else:\n            return mid   #查找成功返回下标\n    return -1            #不存在查找对象，返回-1\n\ndef main(): #测试数据\n    test = [1, 3, 33, 8, 37, 29, 25, 99, 100]\n    print('索引为',search(test, 3))\n    print('索引为',search(test, 98))\n\nif __name__ == \"__main__\": main()\n```\n```python\n#递归实现\ndef search(item, alist, low, high):  #二分法查找\n    if high <= low: return -1\n    mid = (low + high) // 2\n    if alist[mid] > item:\n        return search(item, alist, low, mid)\n    elif alist[mid] < item:\n        return search(item, alist, mid+1, high)\n    else:\n        return mid\n\ndef binarysearch(item, alist):  #递归二分法查找\n    return search(item, alist, 0, len(alist))\n\ndef main(): #测试数据\n    test = [1, 3, 33, 8, 37, 29, 25, 99, 100]\n    print('索引为',binarysearch(3, test))\n    print('索引为',binarysearch(98, test))\n\nif __name__ == \"__main__\": main()\n```\n\n#基础排序算法\n* **loading...**\n","tags":["python"]},{"title":"Mid-Autumn Festival to do list","url":"/erdianjiu.github.io/2018/09/23/Mid-Autumn Festival to do list/","content":"搭建自己的个人网站应该算是完成了大半吧，我将用它来记录自己的算法学习，算是对自己的一直督促、鞭策吧。接下来就是好好学英语，好好学算法！\n\n最后感谢一下@女神小姐姐（没有传送门，嘻嘻嘻）的文章引导和[@aircloud](https://github.com/aircloud/hexo-theme-aircloud)的Theme。\n"}]